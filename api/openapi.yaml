openapi: 3.0.0
info:
  title: TravelSet
  description: The API of a trip management app called TravelSet
  version: 2.0.0
paths:
  /user:
    post:
      summary: Create a new user
      description: Creates a new user in the system with the specified information.
      operationId: createUser
      requestBody:
        description: The user details needed for the object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successful user creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}:
    get:
      summary: Get a user's trips
      description: Returns the trips that are under a specific user
      operationId: getUsersTrips
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful retrieval of all user's trips
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trip'
                x-content-type: application/json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip:
    post:
      summary: Create a new trip
      description: The user creates a new trip
      operationId: createTrip
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Parameters needed to create a new trip
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trip'
        required: true
      responses:
        "200":
          description: Successful trip creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}:
    get:
      summary: Get a specific trip
      description: Returns a specific trip
      operationId: getTrip
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful retrieval of a specific trip
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/accommodation:
    post:
      summary: Add an accommodation
      description: Add a specific trip's accommodation
      operationId: addAccommodation
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The accommodation details needed for the object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Accommodation'
        required: true
      responses:
        "200":
          description: Successful accommodation creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/transportation:
    post:
      summary: Add a transportation method
      description: Add a transportation method to the trip
      operationId: addTransportation
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The transportation details needed for the object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transportation'
        required: true
      responses:
        "200":
          description: Successful transportation creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/day:
    post:
      summary: Add a day
      description: Adds a new day to the trip
      operationId: addDay
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful day creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/day/{dayId}:
    get:
      summary: Get day
      description: Returns a specific day
      operationId: getDay
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: dayId
        in: path
        description: The day's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful retrieval of a specific day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/day/{dayId}/activity:
    post:
      summary: Add an activity
      description: Adds a blank activity inside a certain day
      operationId: addActivity
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: dayId
        in: path
        description: The day's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The activity details needed for the object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        "200":
          description: Successful activity creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/day/{dayId}/activity/{activityId}:
    get:
      summary: Get an activity
      description: Retrieves a specific activity inside a certain day
      operationId: getActivity
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: dayId
        in: path
        description: The day's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: activityId
        in: path
        description: The activity's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful activity retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
    put:
      summary: Put an activity
      description: Updates an activity inside a certain day
      operationId: updateActivity
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: dayId
        in: path
        description: The day's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: activityId
        in: path
        description: The activity's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The activity details needed for the object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        "200":
          description: Successful activity update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
    delete:
      summary: Delete an activity
      description: Deletes an activity inside a certain day
      operationId: deleteActivity
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: dayId
        in: path
        description: The day's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: activityId
        in: path
        description: The activity's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful activity deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
  /user/{userId}/trip/{tripId}/day/{dayId}/generateRandomActivities:
    get:
      summary: Generate activities
      description: Generates some random activities to fill the day with
      operationId: generateRandomActivities
      parameters:
      - name: userId
        in: path
        description: The user's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tripId
        in: path
        description: The trip's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: dayId
        in: path
        description: The day's Id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful random activities generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Day'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Default
components:
  schemas:
    User:
      required:
      - email
      - id
      - name
      - password
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the user.
          format: int64
        name:
          type: string
          description: Full name of the user.
        email:
          type: string
          description: Email address of the user.
          format: email
        password:
          type: string
          description: Password for the user account.
          format: password
      example:
        id: 1
        name: John Doe
        email: john.doe@example.com
        password: secret123
    Trip:
      required:
      - budget
      - dates
      - destination
      - id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the trip.
          format: int64
        name:
          type: string
          description: Name of the trip.
        destination:
          type: string
          description: Destination of the trip.
        dates:
          type: string
          description: Date range for the trip.
        budget:
          type: integer
          description: Budget for the trip.
        days:
          type: object
          description: Detailed itinerary days.
        accommodation:
          $ref: '#/components/schemas/Accommodation'
        transportation:
          $ref: '#/components/schemas/Transportation'
        isPast:
          type: boolean
          description: Indicates whether the trip has already occurred.
        daysList:
          type: array
          description: List of days for the trip.
          items:
            $ref: '#/components/schemas/Day'
      example:
        id: 101
        name: Beach Vacation
        destination: Maldives
        dates: 2024-12-20 to 2024-12-27
        budget: 5000
        isPast: false
        accommodation:
          name: Paradise Inn
          address: "123 Beach Road, Maldives"
          price: 1500
        transportation:
          name: Flight
          date: 2024-12-20
          time: 930
        daysList:
        - dayNumber: 1
          id: 1
          activityList:
          - name: Snorkeling
            description: Explore the coral reefs.
            lockedStatus: false
    Transportation:
      required:
      - date
      - name
      - time
      type: object
      properties:
        name:
          type: string
          description: Mode of transportation.
        date:
          type: string
          description: Date of the transportation.
        time:
          type: integer
          description: "Time of the transportation in 24-hour format (e.g., 1400 for\
            \ 2:00 PM)."
      example:
        name: Flight
        date: 2024-12-20
        time: 930
    Accommodation:
      required:
      - address
      - name
      - price
      type: object
      properties:
        name:
          type: string
          description: Name of the accommodation.
        address:
          type: string
          description: Address of the accommodation.
        price:
          type: integer
          description: Cost of the accommodation.
      example:
        name: Paradise Inn
        address: "123 Beach Road, Maldives"
        price: 1500
    Day:
      required:
      - dayNumber
      - id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the day.
          format: int64
          minimum: 1
        dayNumber:
          type: integer
          description: The day number in the trip itinerary.
          format: int64
        activityList:
          type: array
          description: List of activities for the day.
          items:
            $ref: '#/components/schemas/Activity'
      example:
        id: 1
        dayNumber: 1
        activityList:
        - name: Snorkeling
          description: Explore the coral reefs.
          lockedStatus: false
        - name: Dinner by the beach
          description: Enjoy a candlelight dinner.
          lockedStatus: true
    Activity:
      required:
      - description
      - lockedStatus
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the activity.
        description:
          type: string
          description: Description of the activity.
        lockedStatus:
          type: boolean
          description: Indicates whether the activity is locked and cannot be edited.
      example:
        name: Snorkeling
        description: Explore the coral reefs.
        lockedStatus: false
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          description: Error code representing the type of error.
          format: int32
        message:
          type: string
          description: A detailed error message.
      example:
        code: 404
        message: Resource not found.
